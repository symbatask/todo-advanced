{"ast":null,"code":"import { setProjectOptions } from \"../actions/TodoActions\";\nconst initialState = {\n  tasks: [{\n    \"id\": 1,\n    \"task\": 'Задача 1',\n    \"info\": 'Описание',\n    \"project\": 'project-2',\n    \"prior\": 1,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 2,\n    \"task\": 'Задача 2',\n    \"info\": 'Описание',\n    \"project\": 'project-3',\n    \"prior\": 2,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 3,\n    \"task\": 'Задача 3',\n    \"info\": 'Описание',\n    \"project\": 'project-1',\n    \"prior\": 3,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 4,\n    \"task\": 'Задача 4',\n    \"info\": 'Описание',\n    \"project\": 'project-2',\n    \"prior\": 4,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 5,\n    \"task\": 'Задача 5',\n    \"info\": 'Описание',\n    \"project\": 'project-3',\n    \"prior\": 1,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 6,\n    \"task\": 'Задача 6',\n    \"info\": 'Описание',\n    \"project\": 'project-1',\n    \"prior\": 2,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 7,\n    \"task\": 'Задача 7',\n    \"info\": 'Описание',\n    \"project\": 'project-2',\n    \"prior\": 3,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 8,\n    \"task\": 'Задача 8',\n    \"info\": 'Описание',\n    \"project\": 'project-1',\n    \"prior\": 4,\n    \"expanded\": false,\n    \"done\": false\n  }, {\n    \"id\": 9,\n    \"task\": 'Задача 9',\n    \"info\": 'Описание',\n    \"project\": 'project-3',\n    \"prior\": 1,\n    \"expanded\": false,\n    \"done\": false\n  }],\n  projectOptions: [],\n  filteredItems: [],\n  filteringProject: '',\n  counter: []\n};\nexport const TodoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SORT_PRIOR':\n      let sorted;\n\n      if (state.filteredItems.length !== 0) {\n        sorted = [...state.filteredItems].sort((a, b) => a.prior < b.prior ? 1 : -1).reverse();\n      } else {\n        sorted = [...state.tasks].sort((a, b) => a.prior < b.prior ? 1 : -1).reverse();\n      }\n\n      return { ...state,\n        filteredItems: sorted\n      };\n\n    case 'ADD_TODO':\n      return { ...state,\n        tasks: [...state.tasks, action.task]\n      };\n\n    case 'EXPAND_TODO':\n      return { ...state,\n        tasks: [...state.tasks]\n      };\n\n    case 'DELETE_TODO':\n      return { ...state,\n        tasks: [...state.tasks].filter(el => el.id !== action.id)\n      };\n\n    case 'SET_TASKS':\n      return { ...state,\n        filteredItems: [...state.tasks]\n      };\n\n    case 'SET_OPTIONS':\n      let options = [];\n\n      if (state.filteredItems.length !== 0) {\n        state.filteredItems.forEach(el => options.push(el.project));\n        let projects = Array.from(new Set(options));\n        return { ...state,\n          projectOptions: projects\n        };\n      } else {\n        state.tasks.forEach(el => options.push(el.project));\n        let projects = Array.from(new Set(options));\n        return { ...state,\n          projectOptions: projects\n        };\n      }\n\n    case 'FILTER_TASKS':\n      let filtered = [...state.tasks].filter(el => el.project === action.project);\n      return { ...state,\n        filteredItems: filtered\n      };\n\n    case 'EDIT_TASK':\n      return state.filteredItems.length === 0 ? { ...state,\n        tasks: [...state.tasks].map(el => el.id === action.entity.id ? action.entity : el)\n      } : { ...state,\n        tasks: [...state.tasks].map(el => el.id === action.entity.id ? action.entity : el)\n      };\n\n    case \"SORT_FILTERED\":\n      return { ...state,\n        filteredItems: [...state.filteredItems].sort((a, b) => a.prior < b.prior ? 1 : -1).reverse()\n      };\n\n    case 'SET_FILTERING_PROJECT':\n      return { ...state,\n        filteringProject: action.name\n      };\n\n    case 'DONE_TODO':\n      return { ...state,\n        tasks: [...state.tasks].map(el => el.id === action.id ? { ...el,\n          done: !el.done\n        } : el)\n      };\n\n    case 'SET_COUNTER':\n      return { ...state,\n        counter: action.counter\n      };\n\n    default:\n      return state;\n  }\n};\n_c = TodoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReducer\");","map":{"version":3,"sources":["/Users/macbook/Desktop/todo-advanced/src/redux/reducers/TodoReducer.js"],"names":["setProjectOptions","initialState","tasks","projectOptions","filteredItems","filteringProject","counter","TodoReducer","state","action","type","sorted","length","sort","a","b","prior","reverse","task","filter","el","id","options","forEach","push","project","projects","Array","from","Set","filtered","map","entity","name","done"],"mappings":"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","sourcesContent":["import {setProjectOptions} from \"../actions/TodoActions\";\n\nconst initialState = {\n    tasks: [\n        {\n            \"id\": 1,\n            \"task\": 'Задача 1',\n            \"info\": 'Описание',\n            \"project\": 'project-2',\n            \"prior\": 1,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 2,\n            \"task\": 'Задача 2',\n            \"info\": 'Описание',\n            \"project\": 'project-3',\n            \"prior\": 2,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 3,\n            \"task\": 'Задача 3',\n            \"info\": 'Описание',\n            \"project\": 'project-1',\n            \"prior\": 3,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 4,\n            \"task\": 'Задача 4',\n            \"info\": 'Описание',\n            \"project\": 'project-2',\n            \"prior\": 4,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 5,\n            \"task\": 'Задача 5',\n            \"info\": 'Описание',\n            \"project\": 'project-3',\n            \"prior\": 1,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 6,\n            \"task\": 'Задача 6',\n            \"info\": 'Описание',\n            \"project\": 'project-1',\n            \"prior\": 2,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 7,\n            \"task\": 'Задача 7',\n            \"info\": 'Описание',\n            \"project\": 'project-2',\n            \"prior\": 3,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 8,\n            \"task\": 'Задача 8',\n            \"info\": 'Описание',\n            \"project\": 'project-1',\n            \"prior\": 4,\n            \"expanded\": false,\n            \"done\": false\n        },\n        {\n            \"id\": 9,\n            \"task\": 'Задача 9',\n            \"info\": 'Описание',\n            \"project\": 'project-3',\n            \"prior\": 1,\n            \"expanded\": false,\n            \"done\": false\n        }\n    ],\n    projectOptions: [],\n    filteredItems: [],\n    filteringProject: '',\n    counter: []\n}\nexport const TodoReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SORT_PRIOR':\n            let sorted;\n            if(state.filteredItems.length !== 0) {\n                sorted = [...state.filteredItems].sort((a, b) => (a.prior < b.prior) ? 1 : -1).reverse()\n            } else {\n                sorted = [...state.tasks].sort((a, b) => (a.prior < b.prior) ? 1 : -1).reverse()\n            }\n            return {...state, filteredItems: sorted}\n        case 'ADD_TODO':\n            return {...state, tasks: [...state.tasks, action.task]}\n        case 'EXPAND_TODO':\n            return {...state, tasks: [...state.tasks]}\n        case 'DELETE_TODO':\n            return {...state, tasks: [...state.tasks].filter(el => el.id !== action.id)}\n        case 'SET_TASKS':\n            return {...state, filteredItems: [...state.tasks]}\n        case 'SET_OPTIONS':\n            let options = []\n            if (state.filteredItems.length !== 0) {\n                state.filteredItems.forEach(el => options.push(el.project))\n                let projects = Array.from(new Set(options))\n                return {...state, projectOptions: projects}\n            } else {\n                state.tasks.forEach(el => options.push(el.project))\n                let projects = Array.from(new Set(options))\n                return {...state, projectOptions: projects}\n            }\n        case 'FILTER_TASKS':\n            let filtered = [...state.tasks].filter(el => el.project === action.project)\n            return {...state, filteredItems: filtered}\n\n        case 'EDIT_TASK':\n            return state.filteredItems.length === 0\n            ? {...state, tasks: [...state.tasks].map(el => el.id === action.entity.id ? action.entity : el)}\n            : {...state, tasks: [...state.tasks].map(el => el.id === action.entity.id ? action.entity : el)}\n        case \"SORT_FILTERED\":\n            return {...state, filteredItems: [...state.filteredItems].sort((a, b) => (a.prior < b.prior) ? 1 : -1).reverse()}\n        case 'SET_FILTERING_PROJECT':\n            return {...state, filteringProject: action.name}\n        case 'DONE_TODO':\n            return {...state, tasks: [...state.tasks].map(el => el.id === action.id ? {...el, done: !el.done} : el)}\n        case 'SET_COUNTER':\n            return {...state, counter: action.counter}\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}